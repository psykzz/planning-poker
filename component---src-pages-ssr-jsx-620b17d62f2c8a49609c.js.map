{"version":3,"file":"component---src-pages-ssr-jsx-620b17d62f2c8a49609c.js","mappings":"0IAwEA,UArEqB,SAAH,GAAwB,IAAlBA,EAAU,EAAVA,WACtB,EAA8BC,EAAAA,WAAvBC,EAAO,KAAEC,EAAU,KAS1B,OAPAF,EAAAA,WAAgB,WACd,IAAMG,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QACnDC,MAAM,qCAAqCL,GAAUM,MAAK,SAAAC,GAAG,OAC3DA,EAAIC,OAAOF,MAAK,SAAAG,GAAI,OAAIV,EAAWU,EAAK,GAAC,GAE7C,GAAG,IAGD,gCACE,2BAAMC,KAAKC,UAAUf,EAAY,KAAM,IACvC,2BACA,uBAAKgB,MAAO,CAAEC,SAAU,QAASC,WAAY,eAC1ClB,EAAWmB,MAAK,IAAGnB,EAAWoB,QAAO,IAAGpB,EAAWqB,SAEtD,2BACA,2BACE,sCACA,2BAAMnB,GAAWY,KAAKC,UAAUb,EAAS,KAAM,KAEhDA,GACC,uBAAKc,MAAO,CAAEC,SAAU,QAASC,WAAY,eAC1ChB,EAAQoB,SAASC,MAAM,KAAK,GAAGA,MAAM,KAAK,IAKrD,C","sources":["webpack://planning-poker/./src/pages/ssr.jsx"],"sourcesContent":["import React from 'react';\n\n// Component for rendering, doing nothing special.\nconst TestTemplate = ({ serverData }) => {\n  const [apiData, setApiData] = React.useState();\n\n  React.useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    fetch(`https://poker.psykzz.dev/api/time?${params}`).then(res =>\n      res.json().then(data => setApiData(data))\n    );\n  }, []);\n\n  return (\n    <>\n      <pre>{JSON.stringify(serverData, null, 2)}</pre>\n      <hr />\n      <div style={{ fontSize: '10rem', fontFamily: 'sans-serif' }}>\n        {serverData.hours}:{serverData.minutes}:{serverData.seconds}\n      </div>\n      <hr />\n      <div>\n        <h4>API Time</h4>\n        <pre>{apiData && JSON.stringify(apiData, null, 2)}</pre>\n      </div>\n      {apiData && (\n        <div style={{ fontSize: '10rem', fontFamily: 'sans-serif' }}>\n          {apiData.datetime.split('T')[1].split('.')[0]}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport const getServerData = async ({ query }) => {\n  // Fetch some data\n  const params = new URLSearchParams();\n  params.set('age', query.age ?? 5);\n  params.set('sage', query.sage ?? 15);\n  params.set('swr', query.swr ?? 30);\n  const data = await (\n    await fetch(`https://poker.psykzz.dev/api/time?${params}`)\n  ).json();\n\n  // Process it\n  const now = new Date(data.datetime);\n\n  // Return object with optional { props, headers, status }\n  return {\n    props: {\n      time: data.utc_datetime,\n      hours: now.getHours(),\n      minutes: ('0' + now.getMinutes()).slice(-2),\n      seconds: ('0' + now.getSeconds()).slice(-2),\n\n      age: query.age ?? 5,\n      sage: query.sage ?? 15,\n      swr: query.swr ?? 30,\n    },\n\n    // Add cache control headers\n    // max-age == browser\n    // s-maxage == shared cache (CDN, etc)\n    // state-while-revalidate == time to serve stale request\n    headers: {\n      'Cache-Control': `public, max-age=${query.age ?? 5}, s-maxage=${\n        query.sage ?? 15\n      }, stale-while-revalidate=${query.swr ?? 30}`,\n    },\n  };\n};\n\nexport default TestTemplate;\n"],"names":["serverData","React","apiData","setApiData","params","URLSearchParams","window","location","search","fetch","then","res","json","data","JSON","stringify","style","fontSize","fontFamily","hours","minutes","seconds","datetime","split"],"sourceRoot":""}